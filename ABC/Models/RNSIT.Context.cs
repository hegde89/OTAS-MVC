//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ABC.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RNSITEntities1 : DbContext
    {
        public RNSITEntities1()
            : base("name=RNSITEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<Attendance> Attendances { get; set; }
        public virtual DbSet<AttendanceCount> AttendanceCounts { get; set; }
        public virtual DbSet<DEPT> DEPTs { get; set; }
        public virtual DbSet<ELECTIVE> ELECTIVEs { get; set; }
        public virtual DbSet<STUDENT> STUDENTs { get; set; }
        public virtual DbSet<SubComb> SubCombs { get; set; }
        public virtual DbSet<Subject> Subjects { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Teacher> Teachers { get; set; }
        public virtual DbSet<Valid> ValidS { get; set; }
        public virtual DbSet<LowerTable> LowerTables { get; set; }
        public virtual DbSet<RID_TABLE> RID_TABLE { get; set; }
        public virtual DbSet<SubComb20140> SubComb20140 { get; set; }
        public virtual DbSet<SubComb2014E> SubComb2014E { get; set; }
        public virtual DbSet<Result> Results { get; set; }
        public virtual DbSet<sucomb> sucombs { get; set; }
    
        public virtual ObjectResult<A1_Result> A1(string rid)
        {
            var ridParameter = rid != null ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<A1_Result>("A1", ridParameter);
        }
    
        public virtual ObjectResult<A10_Result> A10(string rid)
        {
            var ridParameter = rid != null ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<A10_Result>("A10", ridParameter);
        }
    
        public virtual ObjectResult<A2_Result> A2(string rid)
        {
            var ridParameter = rid != null ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<A2_Result>("A2", ridParameter);
        }
    
        public virtual ObjectResult<A3_Result> A3(string rid)
        {
            var ridParameter = rid != null ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<A3_Result>("A3", ridParameter);
        }
    
        public virtual ObjectResult<A4_Result> A4(string rid)
        {
            var ridParameter = rid != null ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<A4_Result>("A4", ridParameter);
        }
    
        public virtual ObjectResult<A5_Result> A5(string rid)
        {
            var ridParameter = rid != null ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<A5_Result>("A5", ridParameter);
        }
    
        public virtual ObjectResult<A6_Result> A6(string rid)
        {
            var ridParameter = rid != null ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<A6_Result>("A6", ridParameter);
        }
    
        public virtual ObjectResult<A7_Result> A7(string rid)
        {
            var ridParameter = rid != null ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<A7_Result>("A7", ridParameter);
        }
    
        public virtual ObjectResult<A8_Result> A8(string rid)
        {
            var ridParameter = rid != null ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<A8_Result>("A8", ridParameter);
        }
    
        public virtual ObjectResult<A9_Result> A9(string rid)
        {
            var ridParameter = rid != null ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<A9_Result>("A9", ridParameter);
        }
    
        public virtual int calc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("calc");
        }
    
        public virtual ObjectResult<string> department(string dept)
        {
            var deptParameter = dept != null ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("department", deptParameter);
        }
    
        public virtual ObjectResult<GetLowerTableByRID_Result> GetLowerTableByRID(string rid)
        {
            var ridParameter = rid != null ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLowerTableByRID_Result>("GetLowerTableByRID", ridParameter);
        }
    
        public virtual int getScores(string rid)
        {
            var ridParameter = rid != null ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getScores", ridParameter);
        }
    
        public virtual ObjectResult<GetTeacherDetailsByUSN_Result> GetTeacherDetailsByUSN(string usn)
        {
            var usnParameter = usn != null ?
                new ObjectParameter("usn", usn) :
                new ObjectParameter("usn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTeacherDetailsByUSN_Result>("GetTeacherDetailsByUSN", usnParameter);
        }
    
        public virtual int NewInsertCommand(string rID, Nullable<decimal> a1, Nullable<decimal> a2, Nullable<decimal> a3, Nullable<decimal> a4, Nullable<decimal> a5, Nullable<decimal> a6, Nullable<decimal> a7, Nullable<decimal> a8, Nullable<decimal> a9, Nullable<decimal> a10)
        {
            var rIDParameter = rID != null ?
                new ObjectParameter("RID", rID) :
                new ObjectParameter("RID", typeof(string));
    
            var a1Parameter = a1.HasValue ?
                new ObjectParameter("A1", a1) :
                new ObjectParameter("A1", typeof(decimal));
    
            var a2Parameter = a2.HasValue ?
                new ObjectParameter("A2", a2) :
                new ObjectParameter("A2", typeof(decimal));
    
            var a3Parameter = a3.HasValue ?
                new ObjectParameter("A3", a3) :
                new ObjectParameter("A3", typeof(decimal));
    
            var a4Parameter = a4.HasValue ?
                new ObjectParameter("A4", a4) :
                new ObjectParameter("A4", typeof(decimal));
    
            var a5Parameter = a5.HasValue ?
                new ObjectParameter("A5", a5) :
                new ObjectParameter("A5", typeof(decimal));
    
            var a6Parameter = a6.HasValue ?
                new ObjectParameter("A6", a6) :
                new ObjectParameter("A6", typeof(decimal));
    
            var a7Parameter = a7.HasValue ?
                new ObjectParameter("A7", a7) :
                new ObjectParameter("A7", typeof(decimal));
    
            var a8Parameter = a8.HasValue ?
                new ObjectParameter("A8", a8) :
                new ObjectParameter("A8", typeof(decimal));
    
            var a9Parameter = a9.HasValue ?
                new ObjectParameter("A9", a9) :
                new ObjectParameter("A9", typeof(decimal));
    
            var a10Parameter = a10.HasValue ?
                new ObjectParameter("A10", a10) :
                new ObjectParameter("A10", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NewInsertCommand", rIDParameter, a1Parameter, a2Parameter, a3Parameter, a4Parameter, a5Parameter, a6Parameter, a7Parameter, a8Parameter, a9Parameter, a10Parameter);
        }
    
        public virtual ObjectResult<NewSelectCommand_Result> NewSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NewSelectCommand_Result>("NewSelectCommand");
        }
    
        public virtual int passgen()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("passgen");
        }
    
        public virtual int rating4c(string rid)
        {
            var ridParameter = rid != null ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rating4c", ridParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<spGetAll_Result> spGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetAll_Result>("spGetAll");
        }
    
        public virtual ObjectResult<spGetDepartments_Result> spGetDepartments()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetDepartments_Result>("spGetDepartments");
        }
    
        public virtual int spGetGivenNotGiven()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetGivenNotGiven");
        }
    
        public virtual ObjectResult<spGetPasswordsForClass_Result> spGetPasswordsForClass(string deptId, Nullable<int> sem, string sec)
        {
            var deptIdParameter = deptId != null ?
                new ObjectParameter("deptId", deptId) :
                new ObjectParameter("deptId", typeof(string));
    
            var semParameter = sem.HasValue ?
                new ObjectParameter("sem", sem) :
                new ObjectParameter("sem", typeof(int));
    
            var secParameter = sec != null ?
                new ObjectParameter("sec", sec) :
                new ObjectParameter("sec", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetPasswordsForClass_Result>("spGetPasswordsForClass", deptIdParameter, semParameter, secParameter);
        }
    
        public virtual ObjectResult<spGetResultshv_Result> spGetResultshv()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetResultshv_Result>("spGetResultshv");
        }
    
        public virtual ObjectResult<spGetSection_Result> spGetSection(string deptId, Nullable<int> sem)
        {
            var deptIdParameter = deptId != null ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(string));
    
            var semParameter = sem.HasValue ?
                new ObjectParameter("Sem", sem) :
                new ObjectParameter("Sem", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetSection_Result>("spGetSection", deptIdParameter, semParameter);
        }
    
        public virtual ObjectResult<spGetSem_Result> spGetSem(string deptId)
        {
            var deptIdParameter = deptId != null ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetSem_Result>("spGetSem", deptIdParameter);
        }
    
        public virtual ObjectResult<spGetUpperTable_Result> spGetUpperTable(string combid)
        {
            var combidParameter = combid != null ?
                new ObjectParameter("combid", combid) :
                new ObjectParameter("combid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetUpperTable_Result>("spGetUpperTable", combidParameter);
        }
    
        public virtual ObjectResult<GetTeacherDetailsByUSN_Result> GetTeacherDetailsByUSNFunction(string usn)
        {
            var usnParameter = usn != null ?
                new ObjectParameter("usn", usn) :
                new ObjectParameter("usn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTeacherDetailsByUSN_Result>("GetTeacherDetailsByUSNFunction", usnParameter);
        }
    }
}
